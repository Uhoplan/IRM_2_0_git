<?xml version="1.0" encoding="UTF-8"?>
<script>
  <metadata>
    <priority>0</priority>
  </metadata>
  <parameter name="oper" type="string" trigger="false" relative="false" value=""/>
  <parameter name="opertime" type="number" trigger="false" relative="false" value="0"/>
  <parameter name="npt" type="string" trigger="false" relative="false" value="ПВ"/>
  <parameter name="group" type="string" trigger="false" relative="false" value="БУРЕНИЕ"/>
  <parameter name="suboper" type="string" trigger="false" relative="false" value=""/>
  <parameter name="operclr" type="string" trigger="false" relative="false" value="#00FA9A"/>
  <parameter name="suboperclr" type="string" trigger="false" relative="false" value="#7B68EE"/>
  <code><![CDATA[//console.log('SetOperation: oper = '+oper+', suboper = '+suboper);
var CurOperJsonObj = JSON.parse(call('AutoHistory.GetOperationObj').value);
var nodeStartOnWedges = new UaNode('AGENT.OBJECTS.Support.Auto.StartOnWedges');
if(oper =='На клиньях' && CurOperJsonObj.oper !='На клиньях'){
//	nodeStartOnWedges.assign({value: 'На клиньях'});
	nodeStartOnWedges.assign({value: new Date().getTime()});
//	console.log('StartOnWedges 1 = '+ nodeStartOnWedges.servertime);
} else if(oper !='На клиньях' && CurOperJsonObj.oper == 'На клиньях'){
	var nodeTimeOnWedges = new UaNode('AGENT.OBJECTS.Support.Auto.TimeOnWedges');
//	console.log('StartOnWedges = '+ new Date(nodeStartOnWedges.servertime.replace(/"/g, '')).getTime()+', StopOnWedges = '+ new Date().getTime());
//	console.log('StartOnWedges 2 = '+ new Date(nodeStartOnWedges.servertime).getTime()+', StopOnWedges = '+ new Date().getTime());
	var timeOnWedges = (new Date().getTime() - new Date(nodeStartOnWedges.servertime).getTime())/1000; //resultArray[curs].servertime.replace(/"/g, '')
	console.log('timeOnWedges = '+timeOnWedges);
	nodeTimeOnWedges.assign({value: Number(timeOnWedges)});
/*	
	var ReglamentTimeOnWedges = new UaNode('AGENT.OBJECTS.Support.Auto.ReglamentTimeOnWedges');		
	if(timeOnWedges*1000 > ReglamentTimeOnWedges.value){
		var nodeNPVSeconds = new UaNode('AGENT.OBJECTS.Support.Auto.NPVSeconds');
		nodeNPVSeconds.assign({value: ReglamentTimeOnWedges.value-timeOnWedges*1000*60});
	}	
*/	
}

var nodeOper = new UaNode("AGENT.OBJECTS.Support.Auto.Operation");

var operObj = {npt: npt, group: group, oper: oper, suboper: suboper, opertime: opertime, operclr: operclr, suboperclr: suboperclr};
var operJson = JSON.stringify(operObj);
//console.log('operJson = ', operJson);

var checkstr = operJson;//npt+';'+subitem+';'+oper+';'+suboper;
//	console.log('checkstr = ', checkstr);
if(nodeOper.value != checkstr){ 
	if(opertime==0){
		nodeOper.assign({value: checkstr});
	} else {
		nodeOper.assign({value: checkstr, sourcetime: opertime});
	}	
	console.log('Операция ', call('AutoHistory.GetOperationObj').value);
}

//console.log('Операция ', call('Auto.GetOperationObj').value);]]></code>
</script>
